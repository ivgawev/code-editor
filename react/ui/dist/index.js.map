{"version":3,"sources":["../components/atoms/Button.tsx","../components/atoms/Heading.tsx","../components/atoms/Input.tsx","../components/atoms/Page.tsx","../components/atoms/Text.tsx","../components/molecules/Split.tsx"],"names":["styled","Button","theme","jsx","Heading","props","Text","Input","Page","component","children","rest","as","variant","Children","jsxs","Split","size","left","right","Wrapper","Pane","weight","direction"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\n\nconst Button = styled.button`\n      padding-top: ${({ theme }) => theme.units[2]}rem;\n      padding-bottom: ${({ theme }) => theme.units[2]}rem;\n      padding-left: ${({ theme }) => theme.units[5]}rem;\n      padding-right: ${({ theme }) => theme.units[5]}rem;\n\n      color: ${({ theme }) => theme.palette.primary};\n      font-weight: 500;\n      background-color: ${({ theme }) => theme.colors.GREY[900]};\n\n      border-width: 1;\n      border-style: solid;\n      border-color: ${({ theme }) => theme.colors.GREY[700]};\n`;\n\nexport { Button };\n","import { Text } from '#/components';\nimport { TextProps } from '#/components/atoms/Text';\n\ntype Props = Omit<TextProps, 'as'>;\nconst Heading = (props: Props) => <Text {...props} />;\n\nHeading.defaultProps = {\n      as: 'h1',\n      variant: 'primary'\n};\n\nexport { Heading };\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n      padding-top: ${({ theme }) => theme.units[2]}rem;\n      padding-bottom: ${({ theme }) => theme.units[2]}rem;\n      padding-left: ${({ theme }) => theme.units[5]}rem;\n      padding-right: ${({ theme }) => theme.units[5]}rem;\n\n      color: ${({ theme }) => theme.palette.primary};\n      font-weight: 500;\n\n\n      background-color:  transparent;\n\n      border-width: 1;\n      border-style: solid;\n      border-color: ${({ theme }) => theme.colors.GREY[700]};\n      outline: 0;\n\n\n      ::placeholder {\n            color: ${({ theme }) => theme.text.variants.secondary};\n      }\n\n      :focus {\n            border-color: ${({ theme }) => theme.colors.BLUE[500]};\n      }\n`;\n\nexport { Input };\n","import styled from 'styled-components';\n\nconst Page = styled.main`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      min-height: 100vh;\n      background-color: ${({ theme }) => theme.palette.background};\n`;\n\nexport { Page };\n","import { HTMLAttributes } from 'react';\nimport { DesignSystem } from '@shared/design-system';\nimport styled from 'styled-components';\n\ninterface Props extends HTMLAttributes<HTMLElement> {\n      as?: DesignSystem.Text.Element\n      variant?: keyof DesignSystem.Text.Variants\n}\n\nconst Text = styled(({ as: component, children, ...rest }: Props) => {\n      const Component = component ?? 'p';\n\n      return (\n            <Component {...rest}>\n                  {children}\n            </Component>\n      );\n})`\n      font-family: ${({ theme, as }) => theme.text.types[as!].family};\n      font-weight: ${({ theme, as }) => theme.text.types[as!].weight};\n      font-size: ${({ theme, as }) => theme.text.types[as!].size}rem;\n      color: ${({ theme, variant }) => theme.text.variants[variant!]};\n      line-height: ${({ theme, as }) => theme.text.types[as!].lineHeight}rem;\n      letter-spacing: ${({ theme, as }) => theme.text.types[as!].letterSpacing}px;\n`;\n\nText.defaultProps = {\n      as: 'p',\n      variant: 'primary'\n};\n\nexport { Text, Props as TextProps };\n","import { Children, FC, PropsWithChildren } from 'react';\nimport styled from 'styled-components';\n\ninterface Props extends PropsWithChildren {\n      direction?: 'row' | 'column'\n      size: {\n            left: number\n            right: number\n      }\n}\n\n// This component was used before, but I decided to go to another styling approach\nconst Split: FC<Props> = ({ size, children, ...rest }) => {\n      const [left, right] = Children.toArray(children);\n\n      return (\n            <Wrapper>\n                  <Pane weight={size.left} {...rest}>\n                        {left}\n                  </Pane>\n\n                  <Pane weight={size.right} {...rest }>\n                        {right}\n                  </Pane>\n            </Wrapper>\n      );\n};\n\nconst Wrapper = styled.section`\n      display: flex;\n      flex-direction: column;\n`;\n\nconst Pane = styled.div<{ weight: number, direction?: 'row' | 'column' }>`\n      flex: ${({ weight }) => weight};\n      flex-direction: ${({ direction }) => direction};\n`;\n\nSplit.defaultProps = {\n      direction: 'row'\n};\n\nexport { Split };\n"]}