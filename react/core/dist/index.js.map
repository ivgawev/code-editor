{"version":3,"sources":["../../../shared/helpers/miscellaneous/functions/capitalize.function.ts","../../../shared/helpers/data-structures/functions/convert-paths-to-tree.function.ts","../../../shared/helpers/miscellaneous/constants/is-development.constant.ts","../application/functions/get-fonts-urls.function.ts","../application/components/Normalizer.tsx","../application/components/Application.tsx","../application/components/ErrorBoundary.tsx","../application/components/Router.tsx","../application/functions/create-route.function.tsx","../application/components/Theme.tsx","../application/functions/create-application.function.tsx","../application/functions/set-component-name.function.ts","../application/hooks/use-safety-context.hook.ts","../iterators/components/Tree.item.tsx","../iterators/components/Tree.tsx"],"names":["capitalize","text","isDevelopment","init_dist","__esmMin","css","getFontsUrls","fonts","urls","font","weights","capitalizedFont","c","url","init_get_fonts_urls_function","Normalizer_exports","__export","Normalizer","createGlobalStyle","init_Normalizer","theme","StrictMode","Fragment","jsx","ErrorBoundary","children","BrowserRouter","Navigate","Route","Routes","Suspense","createRoute","path","route","Component","jsxs","Router","index","routes","error","setComponentName","lazy","ThemeProvider","Theme","normalize","themes","defaultTheme","rest","createRoot","createApplication","id","container","name","component","a","useContext","useSafetyContext","context","data","useState","TreeItem","node","render","showChildren","setShowChildren","renderchildren","Tree","tree","roots"],"mappings":"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","sourcesContent":["function capitalize (text: string) {\n      return text.charAt(0).toUpperCase() + text.slice(1).toLocaleLowerCase();\n}\n\nexport { capitalize };\n","import { Tree } from '#/data-structures';\n\nfunction convertPathsToTree (paths: string[]) {\n      const tree: Record<'value', Tree.Node[]> = {\n            value: []\n      };\n\n      for (const path of paths) {\n            const parts = path.split('/');\n\n            parts.reduce((tree, part, level, parts) => {\n                  if (typeof tree[part] === 'undefined') {\n                        tree[part] = {\n                              value: []\n                        };\n\n                        tree.value.push({\n                              id: parts.slice(0, level + 1).join('/'),\n                              level: level + 1,\n                              children: tree[part].value\n                        });\n                  }\n\n                  return tree[part];\n            }, tree);\n      }\n\n      return tree.value;\n}\n\nexport { convertPathsToTree };\n","export const isDevelopment = process.env.NODE_ENV === 'development';\n","import { DesignSystem } from '@shared/design-system';\nimport { css, FlattenSimpleInterpolation } from 'styled-components';\nimport { capitalize } from '@shared/helpers';\n\nfunction getFontsUrls (fonts: DesignSystem.Theme['fonts']) {\n      const urls: FlattenSimpleInterpolation[] = [];\n\n      for (const [font, weights] of Object.entries(fonts)) {\n            const capitalizedFont = capitalize(font);\n            const url = css`@import url('https://fonts.googleapis.com/css2?family=${capitalizedFont}:wght@${weights.join(';')}&display=swap')`;\n            urls.push(url);\n      }\n\n      return urls;\n}\n\nexport { getFontsUrls };\n","import { createGlobalStyle } from 'styled-components';\nimport { getFontsUrls } from '#/application/functions/get-fonts-urls.function';\n\nconst Normalizer = createGlobalStyle`\n\n      ${({ theme }) => getFontsUrls(theme.fonts)};\n\n      * {\n            font-family: ${({ theme }) => `\"${theme.text.defaultFont}\"`};\n      }\n\n      *,\n      ::before,\n      ::after {\n            box-sizing: border-box;\n            border-width: 0;\n            border-style: solid;\n      }\n\n      html {\n            line-height: 1.5;\n            -webkit-text-size-adjust: 100%;\n            -moz-tab-size: 4;\n            tab-size: 4;\n      }\n\n      body {\n            margin: 0;\n            line-height: inherit;\n            user-select: none;\n            overflow: hidden;\n      }\n\n      hr {\n            height: 0;\n            color: inherit;\n            border-top-width: 1px;\n      }\n\n      abbr:where([title]) {\n            text-decoration: underline dotted;\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n            font-size: inherit;\n            font-weight: inherit;\n      }\n\n      a {\n            color: inherit;\n            text-decoration: inherit;\n      }\n\n      b,\n      strong {\n            font-weight: bolder;\n      }\n\n      code,\n      kbd,\n      samp,\n      pre {\n            font-size: 1em;\n      }\n\n      small {\n            font-size: 80%;\n      }\n\n      sub,\n      sup {\n            font-size: 75%;\n            line-height: 0;\n            position: relative;\n            vertical-align: baseline;\n      }\n\n      sub {\n            bottom: -0.25em;\n      }\n\n      sup {\n            top: -0.5em;\n      }\n\n      table {\n            text-indent: 0;\n            border-color: inherit;\n            border-collapse: collapse;\n      }\n\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n            font-family: inherit;\n            font-size: 100%;\n            font-weight: inherit;\n            line-height: inherit;\n            color: inherit;\n            margin: 0;\n            padding: 0;\n      }\n\n      button,\n      select {\n            text-transform: none;\n      }\n\n      button,\n      [type='button'],\n      [type='reset'],\n      [type='submit'] {\n            -webkit-appearance: button;\n            background-color: transparent;\n            background-image: none;\n      }\n\n      :-moz-focusring {\n            outline: auto;\n      }\n\n      :-moz-ui-invalid {\n            box-shadow: none;\n      }\n\n      progress {\n            vertical-align: baseline;\n      }\n\n      ::-webkit-inner-spin-button,\n      ::-webkit-outer-spin-button {\n            height: auto;\n      }\n\n      [type='search'] {\n            -webkit-appearance: textfield;\n            outline-offset: -2px;\n      }\n\n      ::-webkit-search-decoration {\n            -webkit-appearance: none;\n      }\n\n      ::-webkit-file-upload-button {\n            -webkit-appearance: button;\n            font: inherit;\n      }\n\n      summary {\n            display: list-item;\n      }\n\n      blockquote,\n      dl,\n      dd,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      hr,\n      figure,\n      p,\n      pre {\n            margin: 0;\n      }\n\n      fieldset {\n            margin: 0;\n            padding: 0;\n      }\n\n      legend {\n            padding: 0;\n      }\n\n      ol,\n      ul,\n      menu {\n            list-style: none;\n            margin: 0;\n            padding: 0;\n      }\n\n      textarea {\n            resize: vertical;\n      }\n\n      input::placeholder,\n      textarea::placeholder {\n            opacity: 1;\n      }\n\n      button,\n      [role=\"button\"] {\n            cursor: pointer;\n      }\n\n      :disabled {\n            cursor: default;\n      }\n\n      img,\n      svg,\n      video,\n      canvas,\n      audio,\n      iframe,\n      embed,\n      object {\n            display: block;\n      }\n\n      img,\n      video {\n            max-width: 100%;\n            height: auto;\n      }\n\n`;\n\nexport { Normalizer as default };\n","import { Application, setComponentName } from '#/application';\nimport { FC, StrictMode } from 'react';\nimport { ErrorBoundary } from '#/application/components/ErrorBoundary';\nimport { Router } from '#/application/components/Router';\nimport { Theme } from '#/application/components/Theme';\n\ntype Props = Omit<Application.Configuration, 'id'>;\n\nconst Component: FC<Props> = ({ themes, defaultTheme, normalize, ...rest }) => {\n      const theme = themes.find((theme) => theme.name === defaultTheme) ?? themes[0];\n\n      return (\n            <StrictMode>\n                  <ErrorBoundary>\n                        <Theme theme={theme} normalize={normalize}>\n                              <Router {...rest} />\n                        </Theme>\n                  </ErrorBoundary>\n            </StrictMode>\n      );\n};\n\nsetComponentName({ component: Component, name: 'Application' });\nexport { Component as Application };\n","import { Fragment, PropsWithChildren } from 'react';\n\nconst ErrorBoundary = ({ children }: PropsWithChildren) => {\n      return (\n            <Fragment>\n                  {children}\n            </Fragment>\n      );\n};\n\nexport { ErrorBoundary };\n","import { Application, setComponentName } from '#/application';\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport { FC, Suspense } from 'react';\nimport { createRoute } from '#/application/functions/create-route.function';\n\ntype Props = Pick<Application.Configuration, 'index' | 'routes' | 'error'>;\n\nconst Router: FC<Props> = ({ index, routes, error }) => {\n      return (\n            <BrowserRouter>\n                  <Suspense>\n                        <Routes>\n\n                              {Object.entries(routes).map(([path, route]) => createRoute({ path, route }))}\n                              <Route path=\"/\" element={<Navigate to={index} />} />\n                              <Route path=\"*\" element={<Navigate to={error} />} />\n\n                        </Routes>\n                  </Suspense>\n            </BrowserRouter>\n      );\n};\n\nsetComponentName({ component: Router, name: 'Router' });\nexport { Router };\n","import { Application } from '#/application';\nimport { Route } from 'react-router-dom';\n\nnamespace CreateRoute {\n      export interface Params {\n            path: string\n            route: Application.Route\n      }\n}\n\nfunction createRoute ({ path, route }: CreateRoute.Params) {\n      const { component: Component } = route;\n      return <Route key={path} path={path} element={<Component />} />;\n};\n\nexport { createRoute };\n","import { FC, lazy, PropsWithChildren, Suspense } from 'react';\nimport { Application, setComponentName } from '#/application';\nimport { DesignSystem } from '@shared/design-system';\nimport { ThemeProvider, ThemeProps } from 'styled-components';\n\nconst Normalizer = lazy(() => import('#/application/components/Normalizer'));\ntype Props = PropsWithChildren< Pick<Application.Configuration, 'normalize'> & ThemeProps<DesignSystem.Theme> >;\n\nconst Theme: FC<Props> = ({ theme, normalize, children }) => {\n      return (\n            <ThemeProvider theme={theme}>\n                  <Suspense>\n                        {normalize && <Normalizer />}\n                  </Suspense>\n\n                  {children}\n            </ThemeProvider>\n      );\n};\n\nsetComponentName({ component: Theme, name: 'Theme' });\nexport { Theme };\n","import { Application } from '#/application';\nimport { Application as Component } from '#/application/components/Application';\nimport { createRoot } from 'react-dom/client';\n\nnamespace CreateApplication {\n      export type Params = Application.Configuration;\n}\n\nfunction createApplication ({ id, ...rest }: CreateApplication.Params) {\n      const container = document.createElement('div');\n      container.setAttribute('id', id);\n      document.body.prepend(container);\n      const root = createRoot(container);\n      root.render(<Component {...rest} />);\n};\n\nexport { createApplication };\n","import { Context, FC } from 'react';\nimport { isDevelopment } from '@shared/helpers';\n\nnamespace SetComponentName {\n      export interface Params {\n            name: string\n            component: FC | Context<any>\n      }\n}\n\nfunction setComponentName ({ name, component }: SetComponentName.Params) {\n      if (isDevelopment) {\n            component.displayName = name;\n      }\n};\n\nexport { setComponentName };\n","import { Context, useContext } from 'react';\n\nnamespace UseSafetyContext {\n      export type Params<T> = Context<T>;\n}\n\nfunction useSafetyContext <T> (context: UseSafetyContext.Params<T>) {\n      const data = useContext(context);\n\n      if (!data) {\n            const error = `${context.displayName ?? 'The Context'} should be wrapped by it's Provider`;\n            throw new Error(error);\n      }\n\n      return data;\n}\n\nexport { useSafetyContext };\n","import { Iterators, Tree } from '#/iterators';\nimport { Fragment, useState } from 'react';\n\ninterface Props<T> {\n      node: Iterators.Tree.Node<T>\n      render: Iterators.Tree.Render<T>\n}\n\nconst TreeItem = <T,>({ node, render }: Props<T>) => {\n      const { children } = node;\n\n      const [showChildren, setShowChildren] = useState(true);\n      const hasChildren = children.length > 0;\n      const renderchildren = hasChildren && showChildren;\n\n      return (\n            <Fragment>\n                  {render({ node, showChildren, setShowChildren })}\n                  {renderchildren && <Tree<any> tree={children} render={render} />}\n            </Fragment>\n      );\n};\n\nexport { TreeItem };\n","import { Iterators } from '#/iterators';\nimport { TreeItem } from '#/iterators/components/Tree.item';\nimport { Fragment } from 'react';\n\ninterface Props<T> {\n      tree: Array<Iterators.Tree.Node<T>>\n      render: Iterators.Tree.Render<T>\n}\n\nconst Tree = <T,>({ tree, ...rest }: Props<T>) => {\n      const roots = tree.map((node) => (\n            <TreeItem key={node.id} node={node} {...rest} />\n      ));\n\n      return (\n            <Fragment>\n                  {roots}\n            </Fragment>\n      );\n};\n\nexport { Tree };\n"]}