{"version":3,"sources":["../application/components/Application.tsx","../application/components/ErrorBoundary.tsx","../application/components/Router.tsx","../application/functions/create-route.function.tsx","../application/components/Theme.tsx","../application/functions/create-application.function.tsx","../application/functions/set-component-name.function.ts","../application/hooks/use-safety-context.hook.ts","../iterators/components/Tree.item.tsx","../iterators/components/Tree.tsx"],"names":["StrictMode","Fragment","jsx","ErrorBoundary","children","BrowserRouter","Navigate","Route","Routes","Suspense","createRoute","path","route","Component","jsxs","Router","index","routes","error","setComponentName","lazy","ThemeProvider","Normalizer","Theme","theme","normalize","themes","defaultTheme","rest","createRoot","createApplication","id","container","name","component","a","useContext","useSafetyContext","context","data","useState","TreeItem","node","render","showChildren","setShowChildren","renderchildren","Tree","tree","roots"],"mappings":"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","sourcesContent":["import { Application, setComponentName } from '#/application';\nimport { FC, StrictMode } from 'react';\nimport { ErrorBoundary } from '#/application/components/ErrorBoundary';\nimport { Router } from '#/application/components/Router';\nimport { Theme } from '#/application/components/Theme';\n\ntype Props = Omit<Application.Configuration, 'id'>;\n\nconst Component: FC<Props> = ({ themes, defaultTheme, normalize, ...rest }) => {\n      const theme = themes.find((theme) => theme.name === defaultTheme) ?? themes[0];\n\n      return (\n            <StrictMode>\n                  <ErrorBoundary>\n                        <Theme theme={theme} normalize={normalize}>\n                              <Router {...rest} />\n                        </Theme>\n                  </ErrorBoundary>\n            </StrictMode>\n      );\n};\n\nsetComponentName({ component: Component, name: 'Application' });\nexport { Component as Application };\n","import { Fragment, PropsWithChildren } from 'react';\n\nconst ErrorBoundary = ({ children }: PropsWithChildren) => {\n      return (\n            <Fragment>\n                  {children}\n            </Fragment>\n      );\n};\n\nexport { ErrorBoundary };\n","import { Application, setComponentName } from '#/application';\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport { FC, Suspense } from 'react';\nimport { createRoute } from '#/application/functions/create-route.function';\n\ntype Props = Pick<Application.Configuration, 'index' | 'routes' | 'error'>;\n\nconst Router: FC<Props> = ({ index, routes, error }) => {\n      return (\n            <BrowserRouter>\n                  <Suspense>\n                        <Routes>\n\n                              {Object.entries(routes).map(([path, route]) => createRoute({ path, route }))}\n                              <Route path=\"/\" element={<Navigate to={index} />} />\n                              <Route path=\"*\" element={<Navigate to={error} />} />\n\n                        </Routes>\n                  </Suspense>\n            </BrowserRouter>\n      );\n};\n\nsetComponentName({ component: Router, name: 'Router' });\nexport { Router };\n","import { Application } from '#/application';\nimport { Route } from 'react-router-dom';\n\nnamespace CreateRoute {\n      export interface Params {\n            path: string\n            route: Application.Route\n      }\n}\n\nfunction createRoute ({ path, route }: CreateRoute.Params) {\n      const { component: Component } = route;\n      return <Route key={path} path={path} element={<Component />} />;\n};\n\nexport { createRoute };\n","import { FC, lazy, PropsWithChildren, Suspense } from 'react';\nimport { Application, setComponentName } from '#/application';\nimport { DesignSystem } from '@shared/design-system';\nimport { ThemeProvider, ThemeProps } from 'styled-components';\n\nconst Normalizer = lazy(() => import('#/application/components/Normalizer'));\ntype Props = PropsWithChildren< Pick<Application.Configuration, 'normalize'> & ThemeProps<DesignSystem.Theme> >;\n\nconst Theme: FC<Props> = ({ theme, normalize, children }) => {\n      return (\n            <ThemeProvider theme={theme}>\n                  <Suspense>\n                        {normalize && <Normalizer />}\n                  </Suspense>\n\n                  {children}\n            </ThemeProvider>\n      );\n};\n\nsetComponentName({ component: Theme, name: 'Theme' });\nexport { Theme };\n","import { Application } from '#/application';\nimport { Application as Component } from '#/application/components/Application';\nimport { createRoot } from 'react-dom/client';\n\nnamespace CreateApplication {\n      export type Params = Application.Configuration;\n}\n\nfunction createApplication ({ id, ...rest }: CreateApplication.Params) {\n      const container = document.createElement('div');\n      container.setAttribute('id', id);\n      document.body.prepend(container);\n      const root = createRoot(container);\n      root.render(<Component {...rest} />);\n};\n\nexport { createApplication };\n","import { Context, FC } from 'react';\nimport { isDevelopment } from '@shared/helpers';\n\nnamespace SetComponentName {\n      export interface Params {\n            name: string\n            component: FC | Context<any>\n      }\n}\n\nfunction setComponentName ({ name, component }: SetComponentName.Params) {\n      if (isDevelopment) {\n            component.displayName = name;\n      }\n};\n\nexport { setComponentName };\n","import { Context, useContext } from 'react';\n\nnamespace UseSafetyContext {\n      export type Params<T> = Context<T>;\n}\n\nfunction useSafetyContext <T> (context: UseSafetyContext.Params<T>) {\n      const data = useContext(context);\n\n      if (!data) {\n            const error = `${context.displayName ?? 'The Context'} should be wrapped by it's Provider`;\n            throw new Error(error);\n      }\n\n      return data;\n}\n\nexport { useSafetyContext };\n","import { Iterators, Tree } from '#/iterators';\nimport { Fragment, useState } from 'react';\n\ninterface Props<T> {\n      node: Iterators.Tree.Node<T>\n      render: Iterators.Tree.Render<T>\n}\n\nconst TreeItem = <T,>({ node, render }: Props<T>) => {\n      const { children } = node;\n\n      const [showChildren, setShowChildren] = useState(true);\n      const hasChildren = children.length > 0;\n      const renderchildren = hasChildren && showChildren;\n\n      return (\n            <Fragment>\n                  {render({ node, showChildren, setShowChildren })}\n                  {renderchildren && <Tree<any> tree={children} render={render} />}\n            </Fragment>\n      );\n};\n\nexport { TreeItem };\n","import { Iterators } from '#/iterators';\nimport { TreeItem } from '#/iterators/components/Tree.item';\nimport { Fragment } from 'react';\n\ninterface Props<T> {\n      tree: Array<Iterators.Tree.Node<T>>\n      render: Iterators.Tree.Render<T>\n}\n\nconst Tree = <T,>({ tree, ...rest }: Props<T>) => {\n      const roots = tree.map((node) => (\n            <TreeItem key={node.id} node={node} {...rest} />\n      ));\n\n      return (\n            <Fragment>\n                  {roots}\n            </Fragment>\n      );\n};\n\nexport { Tree };\n"]}